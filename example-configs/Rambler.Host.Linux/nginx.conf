worker_processes 1;

events { worker_connections 1024; }

http {
    gzip              on;
    gzip_http_version 1.0;
    gzip_proxied      any;
    gzip_min_length   500;
    gzip_disable      "MSIE [1-6]\.";
    gzip_types        text/plain text/xml text/css
                      text/comma-separated-values
                      text/javascript
                      application/x-javascript
                      application/atom+xml;

    upstream websocket {
        server rambler:5000;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    proxy_cache_path /tmp/nginx levels=1:2 keys_zone=status_cache:10m max_size=100m inactive=15m use_temp_path=off;

    server {
        listen 80;

        # BEGIN SSL STUFF
        listen      443           ssl http2;
        listen [::]:443           ssl http2;
        server_name               <SERVER_NAME>;

        #ssl                       on;

        #add_header                Strict-Transport-Security "max-age=31536000" always;

        ssl_session_cache         shared:SSL:20m;
        ssl_session_timeout       10m;

        ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

        #ssl_stapling              on;
        #ssl_stapling_verify       on;
        #resolver                  8.8.8.8 8.8.4.4;

        ssl_certificate           /etc/letsencrypt/live/<SERVER_NAME>/fullchain.pem;
        ssl_certificate_key       /etc/letsencrypt/live/<SERVER_NAME>/privkey.pem;
        #ssl_trusted_certificate   /etc/letsencrypt/live/<SERVER_NAME>/chain.pem;

        # must be on port 80 to validate the letsencrypt bits
        location ^~ /.well-known {
            allow all;
            root  /data/letsencrypt/;
        }

        # END SSL STUFF

        location /sock {
            proxy_pass http://websocket/;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection $connection_upgrade;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }

        location /api {
            proxy_pass         http://websocket;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /api/status {
            proxy_pass         http://websocket;
            proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;

            # general proxy cache info
            # this endpoint doesn't authorize, so keeping it stupid simple
            proxy_cache status_cache;
            proxy_cache_valid 200 10m;
            proxy_ignore_headers Set-Cookie;

            add_header X-Proxy-Cache $upstream_cache_status;
        }

        location / {
            include /etc/nginx/mime.types;
            root /www;
        }
    }
}